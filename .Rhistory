install.packages("swirl")
library(swirl)
swirl()
library(swirl)
swirl()
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE)
0
swirl()
switl(
)
libray(swirl)
library(swirl)
swirl()
package.install("KernSmooth")
?package
?install
??install
??package
install.packages("KernSmooth")
getOption("KernSmooth)
""
"
getOption("KernSmooth")
library(KernSmooth)
library(Swirl)
Swirl()
library("Swirl"")
""
library("Swirl)
""
""
library("Swirl")
package("Swirl")
package(Swirl)
packages(Swirl)
package("swirl")
library("swirl")
a<-8
qplot(displ,  hwy,	data	=	mpg,	color	=	drv)
library(ggplot2)
qplot(displ,  hwy,	data	=	mpg,	color	=	drv)
qplot(displ,  hwy,	data	=	mpg,	geom	=	c("point",	"smooth"))
qplot(displ,  hwy,	data	=	mpg,	color	=	drv)
qplot(displ,  hwy,	data	=	mpg,	facets	=	.	~	drv)
qplot(hwy,  data	=	mpg,	facets	=	drv	~	.,	binwidth	=	2)
qplot(log(eno),  data	=	maacs)
qplot(log(eno),  data	=	maacs,	fill	=	mopos)
qplot(log(eno),  data	=	maacs,	geom	=	"density")
library(maacs)
xyplot()
?xyplot()
library(lattice)
?xyplot()
x<-1
xyplot(x)
xyplot(x,x)
xyplot(x~x)
y<-xyplot(x~x)
class(y)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
xyplot(Ozone ~ Wind, data = airquality)
library(datasets)
library(lattice)
## Convert 'Month' to a factor variable
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone ~ Wind, data = airquality)  ## Nothing happens!
print(p)  ## Plot appears
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2, 1))  ## Plot with 2 panels
## Custom panel function
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
## Custom panel function
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call default panel function
panel.lmline(x, y, col = 2)  ## Overlay a simple linear regression line
})
library(ggplot2)
?lpoints
?points
?axis
?par
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
head(movies)
g <- ggplot(movies, aes(votes, rating))
print(g+geom_point())
qplot(votes, rating, data = movies) + geom_smooth()
?lines
?lpoints
?splom
?trellis.par.set
?lines
?lpoints
?points
library(swirl)
swirl()
q
quit
quit()
sapply(activity, function(x) sum(is.na(x)))
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
setwd("/home/raphael/R/C5/P1")
setwd("RepData_PeerAssessment1/")
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
sapply(activity, function(x) sum(is.na(x)))
for (i in 1:nrow(activity)) {
print(df[i, "column1"])
# do more things with the data frame...
}
for (i in 1:nrow(activity)) {
print(df[i, ])
# do more things with the data frame...
}
for (i in 1:nrow(activity)) {
print(activity[i, ])
}
for (i in 1:nrow(activity)) {
if (is.na(activity[i, steps])) {
print("a")
}
}
sapply(activity, function(x) sum(is.na(x)))
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
print("a")
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
print(means_table$steps[means_table$date==(activity[i, "date"]))
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
print(means_table$steps[means_table$date==(activity[i, "date"])])
}
}
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
print(means_table$steps[means_table$date==(activity[i, "date"])])
}
}
print(activity[i, "date"])
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
print(activity[i, "date"])
#print(means_table$steps[means_table$date==(activity[i, "date"])])
}
}
print(class(activity[i, "date"]))
means_table$steps[means_table$date==as.Date(strptime("2012-11-30", "%Y-%m-%d")
)
]
```{r}
means_table$steps[means_table$date==as.Date(strptime("2012-11-30", "%Y-%m-%d")]
means_table$steps[means_table$date==as.Date(strptime("2012-11-30", "%Y-%m-%d"))]
means_table$date[1]
class(means_table$date[1])
class(as.Date(strptime("2012-11-30", "%Y-%m-%d"))
)
means_table$date==as.Date(strptime("2012-11-30", "%Y-%m-%d")
)
means_table$date
means_table$date==as.Date(strptime("2012-11-23", "%Y-%m-%d")
)
means_table$date==as.Date(strptime("2012-11-23", "%Y-%m-%d")
)
means_table$steps[means_table$date==as.Date(strptime("2012-11-23", "%Y-%m-%d"))]
means_table$steps[means_table$date==activity[66, "date"]]
activity[66, "date"]
means_table$date==activity[66, "date"]
means_table$date==activity[68, "date"]
means_table$date==activity[68, "datactivity[66, "date"]e"]
activity[66, "date"]
means_table$date
activity[70, "date"]
activity[78, "date"]
activity[378, "date"]
means_table$steps[means_table$date==activity[378, "date"]]
means_table <- aggregate(list (steps=activity$steps), by = list (date=activity$date), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps), by = list (date=activity$date), median, na.rm=TRUE)
means_table
medians_table
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
means_table
means_table <- aggregate(list (steps=activity$steps), by = list (date=activity$date), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps), by = list (date=activity$date), median, na.rm=TRUE)
means_table
medians_table
means_table
medians_table
```
## What is the average daily activity pattern?
```{r}
means2_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (interval=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
plot(means2_table$interval, means2_table$steps, type="l", ylab="Mean steps", xlab="Interval")
max = means2_table$interval[means2_table$steps==max(means2_table$steps)]
paste("The 5-minute interval that contains the maximum number of steps is :", max)
```
## Imputing missing values
```{r}
sapply(activity, function(x) sum(is.na(x)))
history
history()
means_table$steps[means_table$date==activity[66, "date"]]means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
means_table$steps[means_table$date==activity[66, "date"]]
is.na(means_table$steps[means_table$date==activity[66, "date"]])
means_table <- aggregate(list (steps=activity$steps), by = list (date=activity$date), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps), by = list (date=activity$date), median, na.rm=TRUE)
means_table
is.na(means_table$steps[means_table$date==activity[66, "date"]])
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
if (is.na(means_table$steps[means_table$date==activity[66, "date"]])){
activity[i, "steps"]) <- 0
} else {
activity[i, "steps"]) <- means_table$steps[means_table$date==activity[66, "date"]])
}
print(class(activity[i, "date"]))
print(class(activity[i, "date"]))
#print(means_table$steps[means_table$date==(activity[i, "date"])])
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
if (is.na(means_table$steps[means_table$date==activity[66, "date"]])){
activity[i, "steps"]) <- 0
} else {
activity[i, "steps"]) <- means_table$steps[means_table$date==activity[66, "date"]])
}
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
if (is.na(means_table$steps[means_table$date==activity[66, "date"]])){
activity[i, "steps"] <- 0
} else {
activity[i, "steps"] <- means_table$steps[means_table$date==activity[66, "date"]])
}
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity[i, "steps"])) {
if (is.na(means_table$steps[means_table$date==activity[66, "date"]])) {
activity[i, "steps"] <- 0
} else {
activity[i, "steps"] <- means_table$steps[means_table$date==activity[66, "date"]]
}
}
}
sapply(activity, function(x) sum(is.na(x)))
sapply(activity, function(x) sum(is.na(x)))
ggplot(activity, aes(x=date,y=steps)) + geom_histogram(stat="identity")
library(ggplot2)
sapply(activity, function(x) sum(is.na(x)))
ggplot(activity, aes(x=date,y=steps)) + geom_histogram(stat="identity")
