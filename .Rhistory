install.packages("swirl")
library(swirl)
swirl()
library(swirl)
swirl()
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE)
0
swirl()
switl(
)
libray(swirl)
library(swirl)
swirl()
package.install("KernSmooth")
?package
?install
??install
??package
install.packages("KernSmooth")
getOption("KernSmooth)
""
"
getOption("KernSmooth")
library(KernSmooth)
library(Swirl)
Swirl()
library("Swirl"")
""
library("Swirl)
""
""
library("Swirl")
package("Swirl")
package(Swirl)
packages(Swirl)
package("swirl")
library("swirl")
a<-8
qplot(displ,  hwy,	data	=	mpg,	color	=	drv)
library(ggplot2)
qplot(displ,  hwy,	data	=	mpg,	color	=	drv)
qplot(displ,  hwy,	data	=	mpg,	geom	=	c("point",	"smooth"))
qplot(displ,  hwy,	data	=	mpg,	color	=	drv)
qplot(displ,  hwy,	data	=	mpg,	facets	=	.	~	drv)
qplot(hwy,  data	=	mpg,	facets	=	drv	~	.,	binwidth	=	2)
qplot(log(eno),  data	=	maacs)
qplot(log(eno),  data	=	maacs,	fill	=	mopos)
qplot(log(eno),  data	=	maacs,	geom	=	"density")
library(maacs)
xyplot()
?xyplot()
library(lattice)
?xyplot()
x<-1
xyplot(x)
xyplot(x,x)
xyplot(x~x)
y<-xyplot(x~x)
class(y)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
xyplot(Ozone ~ Wind, data = airquality)
library(datasets)
library(lattice)
## Convert 'Month' to a factor variable
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone ~ Wind, data = airquality)  ## Nothing happens!
print(p)  ## Plot appears
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2, 1))  ## Plot with 2 panels
## Custom panel function
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
## Custom panel function
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call default panel function
panel.lmline(x, y, col = 2)  ## Overlay a simple linear regression line
})
library(ggplot2)
?lpoints
?points
?axis
?par
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
head(movies)
g <- ggplot(movies, aes(votes, rating))
print(g+geom_point())
qplot(votes, rating, data = movies) + geom_smooth()
?lines
?lpoints
?splom
?trellis.par.set
?lines
?lpoints
?points
setwd("/home/raphael/R/C5/P1")
setwd("RepData_PeerAssessment1/")
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
```
## What is mean total number of steps taken per day?
```{r}
library(ggplot2)
ggplot(activity, aes(x=date,y=steps)) + geom_histogram(stat="identity")
tapply(activity$steps[!is.na(activity$steps)] , activity$date[!is.na(activity$steps)], mean)
tapply(activity$steps[!is.na(activity$steps)] , activity$date[!is.na(activity$steps)], median)
table(tapply(activity$steps[!is.na(activity$steps)] , activity$date[!is.na(activity$steps)], mean) )
tapply(activity$steps[!is.na(activity$steps)] , activity$date[!is.na(activity$steps)], mean)
a <- tapply(activity$steps[!is.na(activity$steps)] , activity$date[!is.na(activity$steps)], mean)
a
class a
class(a)
a <- as.data.table(tapply(activity$steps[!is.na(activity$steps)] , activity$date[!is.na(activity$steps)], mean) )
a <- as.data.frame(tapply(activity$steps[!is.na(activity$steps)] , activity$date[!is.na(activity$steps)], mean) )
a
a <- tapply(activity$steps[!is.na(activity$steps)] , activity$date[!is.na(activity$steps)], mean)
hea(a)
head(a)
means_table <- aggregate(activity, by = list (mean_steps=activity$steps, date=activity$date), mean, na.rm=TRUE)
less means_table
head(means_table)
means_table <- aggregate(activity, by = list (date=activity$date), mean, na.rm=TRUE)
head(means_table)
means_table <- aggregate(activity$steps, by = list (date=activity$date), mean, na.rm=TRUE)
head(means_table)
medians_table <- aggregate(activity$steps, by = list (date=activity$date), median, na.rm=TRUE)
head(means_table)
head(medians_table)
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
```
## What is mean total number of steps taken per day?
```{r}
library(ggplot2)
ggplot(activity, aes(x=date,y=steps)) + geom_histogram(stat="identity")
means_table <- aggregate(activity$steps, by = list (date=activity$date), mean, na.rm=TRUE)
medians_table <- aggregate(activity$steps, by = list (date=activity$date), median, na.rm=TRUE)
head(means_table)
means_table <- aggregate(activity$steps[!is.na(activity$steps)], by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(activity$steps[!is.na(activity$steps)], by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
head(means_table)
head(medians_table)
library(xtable)
install.packages(xtable)
means2_table <- aggregate(activity$steps[!is.na(activity$steps)], by = list (date=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
head(means2_table)
?plot
means2_table <- aggregate(steps=activity$steps[!is.na(activity$steps)], by = list (interval=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
means2_table <- aggregate(activity$steps[!is.na(activity$steps)], by = list (interval=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
head(means2_table)
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
head(means_table)
plot(means2_table$steps,means2_table$interval, type="l")
means2_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (interval=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
head(means2_table)
plot(means2_table$steps, means2_table$interval, type="l")
plot(means2_table$interval, means2_table$steps, type="l")
plot(means2_table$interval, means2_table$steps, type="l", xlab="Mean steps", ylab="Interval"))
plot(means2_table$interval, means2_table$steps, type="l", xlab="Mean steps", ylab="Interval")
plot(means2_table$interval, means2_table$steps, type="l", ylab="Mean steps", xlab="Interval")
View(activity)
View(activity)
means2_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (interval=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
plot(means2_table$interval, means2_table$steps, type="l", ylab="Mean steps", xlab="Interval")
activity$steps[!is.na(activity$steps)])
activity$steps[!is.na(activity$steps)]
activity$steps[is.na(activity$steps)]
means2_table$interval[max(means2_table$steps)]
max(means2_table$steps)
means2_table$interval[206]
means2_table$interval[means2_table$steps=max(means2_table$steps)]
means2_table$interval[means2_table$steps==max(means2_table$steps)]
print("The 5-minute interval, on average across all the days in the dataset, that contains the maximum number of steps is :", max)
max = means2_table$interval[means2_table$steps==max(means2_table$steps)]
print("The 5-minute interval, on average across all the days in the dataset, that contains the maximum number of steps is :", max)
print("The 5-minute interval, on average across all the days in the dataset, that contains the maximum number of steps is :")
paste("The 5-minute interval, on average across all the days in the dataset, that contains the maximum number of steps is :", max)
sapply(activity, function(x) sum(is.na(x)))
activity$steps[!is.na(activity$steps)] <= means_table$steps[means_table$date==activity$date]
activity$steps[!is.na(activity$steps)] <- means_table$steps[means_table$date==activity$date]
sapply(activity, function(x) sum(is.na(x)))
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
```
## What is mean total number of steps taken per day?
```{r}
library(ggplot2)
ggplot(activity, aes(x=date,y=steps)) + geom_histogram(stat="identity")
means_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), mean, na.rm=TRUE)
medians_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (date=activity$date[!is.na(activity$steps)]), median, na.rm=TRUE)
means_table
medians_table
```
## What is the average daily activity pattern?
```{r}
means2_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps)]), by = list (interval=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
plot(means2_table$interval, means2_table$steps, type="l", ylab="Mean steps", xlab="Interval")
max = means2_table$interval[means2_table$steps==max(means2_table$steps)]
paste("The 5-minute interval, on average across all the days in the dataset, that contains the maximum number of steps is :", max)
```
## Imputing missing values
```{r}
sapply(activity, function(x) sum(is.na(x)))
activity$steps[is.na(activity$steps)] <- means_table$steps[means_table$date==activity$date]
sapply(activity, function(x) sum(is.na(x)))
activity$steps[is.na(activity$steps)] <- means_table$steps[activity$date==$means_table$stepsdate]
activity$steps[is.na(activity$steps)] <- means_table$steps[activity$date==means_table$stepsdate]
means_table$steps[activity$date==means_table$stepsdate]
means_table$steps[activity$date==means_table$date]
means_table$steps[means_table$date==means_table$date]
activity$steps[is.na(activity$steps)] <- means_table$steps[means_table$date==activity$date[is.na(activity$steps)]]
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
sapply(activity, function(x) sum(is.na(x)))
activity$steps[is.na(activity$steps)] <- means_table$steps[means_table$date==activity$date[is.na(activity$steps)]]
means_table$steps[means_table$date==activity$date]
means_table$steps[means_table$date=="2012-10-01"]
means_table$steps[means_table$date==2012-10-01]
means_table$steps[means_table$date==2012-10-]
means_table$steps[means_table$date==2012-10-02]
means_table$steps[means_table$date==2012-10-03]
head(means_table)
means_table$steps[means_table$date=2012-10-03]
means_table$steps[means_table$date]
means_table$steps[,means_table$date]
means_table$steps[means_table$date==max(means_table$date)]
tail(means_table)
means_table$steps[means_table$date==as.date(2012-11-28)]
means_table$steps[means_table$date==date(2012-11-28)]
means_table$steps[means_table$date==date("2012-11-28")]
date?
?
)
?date
within(activity, activity$steps[is.na(activity$steps)] <- means_table$steps[means_table$date==activity$date])
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
within(activity, activity$steps[is.na(activity$steps)] <- means_table$steps[means_table$date==activity$date])
activity$steps[is.na(activity$steps)] <- means_table$steps[means_table$date==activity$date]
activity$steps[is.na(activity$steps)] <- mean(s_table$steps[activity$date]))
activity$steps[is.na(activity$steps)] <- mean(s_table$steps[activity$date])
activity$steps[is.na(activity$steps)] <- mean(activity$steps[activity$date])
head(activity)
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
sapply(activity, function(x) sum(is.na(x)))
activity$steps[is.na(activity$steps)] <- mean(activity$steps[activity$date])
activity$steps[is.na(activity$steps)]
sapply(activity, function(x) sum(is.na(x)))
activity$steps[is.na(activity$steps)] <- mean(activity$steps[activity$date])
head(activity)
mean(activity$steps[activity$date]
)
activity$steps[is.na(activity$steps)] := mean(activity$steps[activity$date])
activity$steps[is.na(activity$steps)]
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
activity$steps[is.na(activity$steps)]
activity$steps <- with(activity, if(is.na(activity$steps)) means_table[date])
activity$steps <- with(activity, if(is.na(steps)) means_table[date])
activity <- read.csv("activity.csv", colClasses = c("numeric", "factor" , "numeric"))
activity$date <- as.Date(strptime(activity$date, "%Y-%m-%d"))
sapply(activity, function(x) sum(is.na(x)))
activity$steps <- with(activity, if(is.na(steps)) means_table[date])
activity$steps <- with(activity, if(is.na(steps)) means_table$steps[means_table$data==date])
activity$steps <- with(activity, ifelse(is.na(steps)) means_table$steps[means_table$data==date])
activity$steps <- with(activity, ifelse(is.na(steps)), means_table$steps[means_table$data==date])
activity$date[is.na(activity$steps)]
activity$steps[is.na(activity$steps)]
list_dates_when_na <- activity$date[is.na(activity$steps)]
?with
with(list_dates_when_na, means_table$steps[means_table$date==list_dates_when_na])
within(list_dates_when_na, means_table$steps[means_table$date==list_dates_when_na])
list_dates_when_na <- activity$date[is.na(activity$steps)]
list_dates_when_na
sapply(activity, function(x) sum(is.na(x)))
by(list_dates_when_na, list_dates_when_na function(x) means_table$steps[means_table$date==x])
by(list_dates_when_na, list_dates_when_na, function(x) means_table$steps[means_table$date==x])
list_dates_when_na <- activity$date[is.na(activity$steps)]
list_dates_when_na
by(list_dates_when_na, list_dates_when_na, function(x) means_table$steps[means_table$date==x])
by(list_dates_when_na, list_dates_when_na, function(x) means_table$steps[means_table$date==x])
by(list_dates_when_na, list_dates_when_na, function(x) means_table$steps[, means_table$date==x])
means_table$step
means_table$steps
means_table$ste
means_table$step[means_table$data==as.Date(strptime("2012-10-01", "%Y-%m-%d"))]
means_table$step[means_table$date==as.Date(strptime("2012-10-01", "%Y-%m-%d"))]
means_table$step[means_table$date==as.Date(strptime("2012-10-01", "%Y-%m-%d"))]
as.Date(strptime("2012-10-01", "%Y-%m-%d"))
means_table$date
means_table$date==as.Date(strptime("2012-10-01", "%Y-%m-%d"))
means_table$date==as.Date(strptime("2012-10-05", "%Y-%m-%d"))
means_table$step[means_table$date==as.Date(strptime("2012-10-05", "%Y-%m-%d"))]
by(list_dates_when_na, list_dates_when_na, function(x) means_table$steps[means_table$date==as.Date(strptime(x, "%Y-%m-%d"))])
by(list_dates_when_na, list_dates_when_na, function(x) x)
with(list_dates_when_na, function(x) means_table$steps[means_table$date==as.Date(strptime(x, "%Y-%m-%d"))])
with(list_dates_when_na, function(x) x)
activity$day <- weekdays(as.Date(activity$date))
activity$day <- wdays(as.Date(activity$date))
activity$day <- wday(as.Date(activity$date))
list_dates_when_na$wwee <- 2
list_dates_when_na <- table(activity$date[is.na(activity$steps)])
with(list_dates_when_na, function(x) means_table$steps[means_table$date==as.Date(strptime(x, "%Y-%m-%d"))])
list_dates_when_na
activity$day <- as.POSIXlt(activity$date)$wday
meanswd_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps) | activity$days<=5]), by = list (interval=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
meanswd_table <- aggregate(list (steps=activity$steps[!is.na(activity$steps) | activity$day<=5]), by = list (interval=activity$interval[!is.na(activity$steps)]), mean, na.rm=TRUE)
subset_weekdays <- sub <- subset(activity, day <= 5)
subset_weekends <- sub <- subset(activity, day >= 6)
plot(means2_table$interval, means2_table$steps, type="l", ylab="Mean steps", xlab="Interval")
means2_weekdays <- aggregate(list (steps=subset_weekdays$steps[!is.na(subset_weekdays$steps)]),
by = list (interval=subset_weekdays$interval[!is.na(subset_weekdays$steps)]), mean, na.rm=TRUE)
means2_weekdays <- aggregate(list (steps=subset_weekdays$steps[!is.na(subset_weekdays$steps)]),
by = list (interval=subset_weekdays$interval[!is.na(subset_weekdays$steps)]), mean, na.rm=TRUE)
means2_weekends <- aggregate(list (steps=subset_weekends$steps[!is.na(subset_weekends$steps)]),
by = list (interval=subset_weekends$interval[!is.na(subset_weekends$steps)]), mean, na.rm=TRUE)
library(lattice)
plot(means2_weekdays$interval, means2_weekdays$steps, type="l", ylab="Number of steps", xlab="Interval")
plot(means2_weekdays$interval, means2_weekdays$steps, type="l", ylab="Number of steps", xlab="Interval")
plot(means2_weekends$interval, means2_weekends$steps, type="l", ylab="Number of steps", xlab="Interval")
par(mfrow = c(1,2))
plot(means2_weekdays$interval, means2_weekdays$steps, type="l", ylab="Number of steps", xlab="Interval")
plot(means2_weekends$interval, means2_weekends$steps, type="l", ylab="Number of steps", xlab="Interval")
par(mfrow = c(2,1))
plot(means2_weekdays$interval, means2_weekdays$steps, type="l", ylab="Number of steps", xlab="Interval")
plot(means2_weekends$interval, means2_weekends$steps, type="l", ylab="Number of steps", xlab="Interval")
plot(means2_weekdays$interval, means2_weekdays$steps, type="l", ylab="Number of steps", xlab="Interval", title="Weekdays")
par(mfrow = c(2,1))
plot(means2_weekdays$interval, means2_weekdays$steps, type="l", ylab="Number of steps", xlab="Interval", main="Weekdays")
plot(means2_weekends$interval, means2_weekends$steps, type="l", ylab="Number of steps", xlab="Interval", main="Weekends")
